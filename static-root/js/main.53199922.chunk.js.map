{"version":3,"sources":["reportWebVitals.js","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","backendlookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","concat","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","window","location","href","indexOf","response","onerror","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","react_default","a","createElement","onClick","event","preventDefault","tweetID","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisPlayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","_useState","useState","_useState2","Object","slicedToArray","didLookup","setDidLookup","_useState3","_useState4","profile","setProfile","_useState5","_useState6","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","_wrapRegExp","tweetid","urlTweetId","groups","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","_useState7","_useState8","tweetsDidSet","setTweetsDidSet","final","toConsumableArray","newTweets","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textareaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetDetailComponent","tweetId","setTweet","tweetsEl","getElementById","ReactDOM","createRoot","render","setNewTweets","canTweet","tempNewTweets","assign","dataset","g","tweetFeedElements","querySelectorAll","forEach","container","t"],"mappings":"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","file":"static/js/main.53199922.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendlookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `http://localhost:8000/api${endpoint}`\n  xhr.responseType = \"json\"\n  xhr.open(method, url)\n  const csrftoken = getCookie('csrftoken');\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n  \n  if (csrftoken) {\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n  xhr.onload = function() {\n    if (xhr.status === 403) {\n      if (window.location.href.indexOf(\"login\") === -1) {\n        window.location.href = \"/login?showLoinRequired=true\"\n      }\n    }\n      callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({\"message\": \"The request was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}\n\n","import { backendlookup } from \"../lookup/components\"\n\n\nexport function apiTweetCreate(newTweet, callback){\n    backendlookup(\"POST\", \"/tweets/create\", callback, {content: newTweet})\n}\nexport function apiTweetAction(tweetID, action, callback){\n    const data = {id: tweetID, action: action}\n    backendlookup(\"POST\", \"/tweets/action\", callback, data)\n}\nexport function apiTweetDetail(tweetID, callback) {\n    backendlookup(\"GET\", `/tweets/${tweetID}`, callback)\n\n}\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed\"\n\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendlookup(\"GET\", endpoint, callback)\n}\n    \nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendlookup(\"GET\", endpoint, callback)\n}\n    ","import React from 'react'\nimport { apiTweetAction } from './lookup'\n\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props\n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleActionBackendEvent = (response, status) => {\n      if ((status === 200 || status === 201) && didPerformAction){\n        didPerformAction(response, status)\n      }\n    }\n    const handleClick = (event) => {\n      event.preventDefault()\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n    \n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay} ` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  } \n\n","import React from 'react'\n\n\nexport function UserLink (props) {\n  const {username} = props\n  const handleUserLink = (event) => {\n    window.location.href = `/profiles/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n    {props.children}\n  </span>\n}\n\nexport function UserDisplay(props) {\n  const{user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n\n  return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}    \n\nexport function UserPicture(props) {\n  const {user, hideLink} = props\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username}\n</span>\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}></UserLink>\n}","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisPlayCount(props){\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n  }\n  ","import React, {useState, useEffect} from 'react'\nimport { apiProfileDetail, apiProfileFollowToggle} from './lookup'\nimport { UserDisplay, UserPicture } from './components'\nimport { DisPlayCount } from './utils'\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n    const handleFollowToggle = (event) => {\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n    return user ? <div>\n        <UserPicture user={user} hideLink />\n        <p><UserDisplay user={user} includeFullName hideLink/></p>\n        <p><DisPlayCount>{user.follower_count}</DisPlayCount> {user.follower_count === 1 ? \"Follower\" : \"Followers\"}</p>\n        <p><DisPlayCount>{user.following_count}</DisPlayCount> Following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n        </div> : null\n}\n\nexport function ProfileBadgeComponent(props) {\n    const {username} = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n\n    const handleBackendLookup = (response, status) => {\n      if (status  === 200) {\n        setProfile(response)\n      }\n    }\n    useEffect(()=>{\n      if (didLookup === false){\n        apiProfileDetail(username, handleBackendLookup)\n        setDidLookup(true)\n      }\n    }, [username, didLookup, setDidLookup])\n\n    const handleNewFollow = (actionVerb) => {\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\n            console.log(response, status)\n            if (status === 200) {\n                setProfile(response)\n            }\n            setProfileLoading(false)\n        })\n        setProfileLoading(true)\n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\n}","import { backendlookup } from \"../lookup/components\"\n\n\nexport function apiProfileDetail(username, callback) {\n    backendlookup(\"GET\", `/profiles/${username}`, callback)\n\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendlookup(\"POST\", `/profiles/${username}/follow`, callback, data)\n\n}","import React, { useState} from 'react'\nimport { ActionBtn } from './buttons'\nimport { UserDisplay, UserPicture } from '../profiles'\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className = {' '} tweet={tweet.parent} /> : null\n  }\nexport function Tweet(props) {\n  const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  className = isRetweet === true ? `${className} p-2 border rounded` : className\n  const path = window.location.pathname\n  const match = path.match(/(?<tweetid>\\d+)/)\n  const urlTweetId = match ? match.groups.tweetid : -1\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\n  const handleLink = (event) => {\n    event.preventDefault()\n    window.location.href = `/${tweet.id}`\n  }\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200){\n      setActionTweet(newActionTweet)\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet)\n      }\n\n    }\n\n  }\n  return <div className={className}>\n    {isRetweet === true && <div className='mb-2'>\n      <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\n      </div>}\n    <div className='d-flex'>\n      <div className=''>\n        <UserPicture user={tweet.user} />\n      </div>\n      <div className='col-11'>\n      <div>\n        <p>\n          <UserDisplay includeFullName user={tweet.user} />\n        </p>\n        <p>{tweet.content}</p>\n        <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n      </div>\n    <div className='btn btn-group px-0'> \n    {(actionTweet && hideActions !== true) && <React.Fragment>\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"like\", display:'Likes'}}/>\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"unlike\", display:'Unlike'}}/>\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type:\"retweet\", display:'Retweet'}}/>\n    </React.Fragment>\n}\n      {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n    </div>\n    </div>\n  </div>\n  </div>\n}\n","import React, {useEffect, useState} from 'react'\nimport { apiTweetList } from './lookup'\n\nimport { Tweet } from './detail'\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => {\n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListLookup)\n    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n  \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n  \n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n      \n    }\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n      tweet={item} \n      didRetweet = {handleDidRetweet}\n      className='my-5 py-5 border bg-white text-dark' \n      key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  }\n  ","import React from 'react'\nimport { apiTweetCreate } from './lookup'\n\n\nexport function TweetCreate(props) { \n  const textareaRef = React.createRef()\n  const {didTweet} = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response)\n    } else {\n      console.log(response)\n      alert(\"An error occured please try again\")\n    }\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textareaRef.current.value\n    // backend api request\n    apiTweetCreate(newVal, handleBackendUpdate)\n    textareaRef.current.value = ''\n  }\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}> \n      <textarea ref={textareaRef} required={true} className='form-control' name='tweet'>\n\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n    </div>\n}","import React, {useEffect, useState} from 'react'\nimport { apiTweetFeed } from './lookup'\n\nimport { Tweet } from './detail'\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n    useEffect(()=>{\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n    useEffect(() => { \n      if (tweetsDidSet === false) {\n        const handleTweetListLookup = (response, status) => {\n          if (status === 200){ \n            setNextUrl(response.next)\n            setTweetsInit(response.results)\n            setTweetsDidSet(true)\n          }\n        }\n        apiTweetFeed(handleTweetListLookup)\n    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n  \n    const handleDidRetweet = (newTweet) => {\n      const updateTweetsInit = [...tweetsInit]\n      updateTweetsInit.unshift(newTweet)\n      setTweetsInit(updateTweetsInit)\n  \n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(tweets)\n      setTweets(updateFinalTweets)\n    }\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200){\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n      \n    }\n    return <React.Fragment>{tweets.map((item, index)=>{\n      return <Tweet \n      tweet={item} \n      didRetweet = {handleDidRetweet}\n      className='my-5 py-5 border bg-white text-dark' \n      key={`${index}-{item.id}`} />\n    })}\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  }\n  ","import React, {useEffect, useState} from 'react'\nimport { TweetsList } from './list'\nimport { TweetCreate } from './create'\nimport { apiTweetDetail } from './lookup'\nimport { FeedList } from './feed'\nimport { Tweet } from './detail'\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n  <FeedList newTweets={newTweets} {...props}/>\n  </div>\n}\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n  const handleNewTweet = (newTweet) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n  return <div className={props.className}>\n    {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\n  <TweetsList newTweets={newTweets} {...props}/>\n  </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if (status  === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet.\")\n    }\n  }\n  useEffect(()=>{\n    if (didLookup === false){\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n  }, [tweetId, didLookup, setDidLookup])\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { TweetDetailComponent, TweetsComponent, FeedComponent } from './tweets';\nimport { ProfileBadgeComponent } from './profiles';\n\nconst e = React.createElement\nconst tweetsEl = (document.getElementById('tweetme'));\nconst root = ReactDOM.createRoot(tweetsEl)\nroot.render(\n  e(TweetsComponent, tweetsEl.dataset)\n); \n\nconst g = React.createElement\nconst tweetFeedElements = (document.getElementById(\"tweetme-2-feed\"));\nconst feed = ReactDOM.createRoot(tweetFeedElements)\nfeed.render(\n  g(FeedComponent, tweetFeedElements.dataset)\n)\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container=> {\n  const detail_render = ReactDOM.createRoot(container)\n  detail_render.render(\n    e(TweetDetailComponent, container.dataset)\n  ); \n})\n\nconst t = React.createElement\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\nuserProfileBadgeElements.forEach(container=> {\n  const profile_render = ReactDOM.createRoot(container)\n  profile_render.render(\n    t(ProfileBadgeComponent, container.dataset)\n  ); \n})\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}